Leetcode 128

Question:
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
Example 3:

Input: nums = [1,0,1,2]
Output: 3

Solution:
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n=nums.size();
        int longestLength=0;
        unordered_map<int,bool>freq;
        for(int num:nums){
            freq[num]=false;
        }
        for(int num:nums){
            if(freq[num]) continue;
            int currentLength=1;

            freq[num]=true;
            int nextNum=num+1;
            while(freq.count(nextNum)&&!freq[nextNum]){
                currentLength++;
                freq[nextNum]=true;
                nextNum++;
            }
            int prevNum=num-1;
            while(freq.count(prevNum)&&!freq[prevNum]){
                currentLength++;
                freq[prevNum]=true;
                prevNum--;
            }
            longestLength=max(longestLength,currentLength);
        }
        return longestLength;
    }
};